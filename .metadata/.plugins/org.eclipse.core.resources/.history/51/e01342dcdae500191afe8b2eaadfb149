package com.work.sharebook.book;

import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.work.sharebook.loan.Loan;
import com.work.sharebook.user.User;
import com.work.sharebook.user.UserRepository;


@RestController
public class BookController {
	
	@Autowired
	BookRepository bookrepository;
	@Autowired
	UserRepository userrepository;
	
	// Affiche les livres disponibles
	@GetMapping(value = "/users/{userId}/books/status/{status}")
	public List<Book> getBookWhithSatus(@PathVariable("userId") String userId,
										@PathVariable("status") String statusStr){
		List<Book> listBook = bookrepository.findByStatusAndUserIdNotAndDeletedFalse(statusStr, Integer.valueOf(userId));
		return listBook;
	}
	
	
	// Renvoie mes livres.
	public List<Book> getMyBooks(@PathVariable("userId") String userId){
		// TODO to implement
		//Book book = new Book(bookname: "bookname");
		Book book = new Book();

		return Arrays.asList(book);
	}
	
	// Creer un livre
	@GetMapping(value = "/users/{userId}/books")
	@ResponseStatus(value = HttpStatus.CREATED)
	public Book createBookForUser(@PathVariable("userId") String userId, @RequestBody Book book){
		Optional<User> user = userrepository.findById(Integer.valueOf(userId));
		book.setDeleted(false);
		book.setStatus("FREE");
		book.setUser(user.get()); // .get transtyper Optinnal to User
		bookrepository.save(book);
		return book;
	}
	
	// Suprime un livre
	@DeleteMapping(value ="/books/{bookId}")
	@ResponseStatus(value = HttpStatus.NO_CONTENT)
	public void deleteBook(@PathVariable("bookId") String bookId) {
		bookrepository.deleteById(bookId);
	}


}
